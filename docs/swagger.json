{
    "swagger": "2.0",
    "info": {
        "description": "A Task service API in Go using Gin framework",
        "title": "Task Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:9001",
    "basePath": "/api",
    "paths": {
        "/tasks": {
            "get": {
                "description": "Return list of task.",
                "summary": "Retrieve a list of task with optional filtering by status (complete|incomplete).",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Save task data in Db.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Create task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/tasks/{taskId}": {
            "get": {
                "description": "Return the task which id value matches taskId.",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrive a specific  task by id.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "find task by taskId",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update task data.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update specific task by Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "update task by id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove task data by id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a specific task by Id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/tasks/{taskId}/files": {
            "get": {
                "description": "Return list of filename and url of files in models.data.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a File assigned to task by Id .",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "task id which the files belong to ",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Return file Id of uploaded file, and task it's associated.",
                "produces": [
                    "application/json"
                ],
                "summary": "Upload a specific file associated with a task.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "update task by id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file to be upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/tasks/{taskId}/files/{fileId}": {
            "get": {
                "description": "Download file stream with content disposition.",
                "produces": [
                    "application/octet-stream"
                ],
                "summary": "Download a specific file associated with a task .",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "task id which file belong to",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "file id to delete",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "return success if file deleted.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a specific file associated with a task by Id.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "task id which file belong to",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "file id to delete",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/tasks/{taskId}/{status}": {
            "patch": {
                "description": "Return the task which Id value matches taskId.",
                "produces": [
                    "application/json"
                ],
                "summary": "Mark a specific task as complete or incomplete.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "update task status by id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mark task as  complete|incomplete status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateTaskRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UpdateTaskRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}